---
title: Programmierung<br>& Datenbanken
subtitle: "Softwarearchitektur"
author: "Joern Ploennigs"
format:
  revealjs:
    theme: [white, custom.scss]
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/ai4sc_logo_v2.svg
    footer: |
      <span style="letter-spacing: .04rem;">programmierung</span><br><span style="letter-spacing: .0rem;">und datenbanken</span>
    transition: slide
    transition-speed: fast
    menu:
      side: left
    slide-number: true
    date-format: long
    auto-play-media: true
    template-partials:
      - title-slide.html
    title-slide-attributes:
      data-background-color: black
      data-background-video: images/02a_Softwarearchitektur/mj_title.mp4
      data-background-video-loop: true
      data-background-video-muted: true
---


## Ablauf

![](images/partA_2.svg)


## Monolithische, maschinennahe Software vor 1950

:::: {.columns}
::: {.column width="50%"}
Die ersten Programme wurden direkt im Maschinencode geschrieben.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_1.svg){fig-align="center"}
:::
::::




## Probleme monolithischer, maschinnenaher Software

:::: {.columns}
::: {.column width="50%"}
Wenn die Hardware sich geändert hat und eine neue Maschinensprache gesprochen wurde so mussten Programme angepasst oder neu geschrieben werden.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_2.svg){fig-align="center"}
:::
::::



## Aufteilung in Betriebssysteme und monolithischer Software seit 1960

:::: {.columns}
::: {.column width="50%"}
Betriebssysteme wurden eingeführt, um Standardaufgaben zu erfüllen und die Hardware zu abstrahieren. Dies geschieht durch Treiber.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_3.svg){fig-align="center"}
:::
::::



## Probleme der Aufteilung in Betriebssysteme und Software

:::: {.columns}
::: {.column width="50%"}
Die Programme sind immer noch schwer zu schreiben, weil sie sehr gutes Verständnis der Hardware erfordern.

Wenn sich die Hardware ändert, so wird dies mit neuen Treibern unterstützt. Das Programm muss nicht angepasst werden.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_4.svg){fig-align="center"}
:::
::::



## Einführung von höheren Programmiersprachen 1970

:::: {.columns}
::: {.column width="50%"}
Um die Programmierung zu vereinfachen, wurden ‘natürlichsprachlichere’ höhere Programmiersprachen eingeführt. Sie müssen mit Compilern in Maschinensprache übersetzt werden.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_5.svg){fig-align="center"}
:::
::::


## Probleme mit höheren Programmiersprachen

:::: {.columns}
::: {.column width="50%"}
Wenn sich die Betriebssysteme ändern, funktionieren Programme nicht und müssen entweder neu kompiliert oder umgeschrieben werden.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_6.svg){fig-align="center"}
:::
::::



## Virtualisierung monolithischer Software seit 1995

:::: {.columns}
::: {.column width="50%"}
Virtuelle Laufzeitumgebungen abstrahieren die Betriebssysteme und kompilierten den Code in Echtzeit (Java) oder interpretieren ihn (Python)
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_7.svg){fig-align="center"}
:::
::::



## Verteilte, Virtualisierte Software im Internet seit 2000

:::: {.columns}
::: {.column width="50%"}
Backend Webserver stellen  die Webseiten zur Verfügung und verwalten die Langzeitdaten  in Datenbanken.

Frontend Webseiten visualisieren die Inhalte und interagieren mit den Nutzern. Leichte Berechnungen werden hier gemacht.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_8.svg){fig-align="center"}
:::
::::




## Probleme mit Verteilter, Virtualisierter Software

:::: {.columns}
::: {.column width="50%"}
Im Internet greifen oft sehr viele Nutzer gleichzeitig auf die gleichen Server (Seiten) zu. Um diese nicht zu überlasten, brauchte man Wege diese bei Bedarf schnell zu duplizieren.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_9.svg){fig-align="center"}
:::
::::



## Verteilte, Virtualisierte Apps und Cloud Software seit den 2010

:::: {.columns}
::: {.column width="50%"}
Um Webserver und Berechnungen in der Cloud besser zu skalieren, bündelt man Programme mit dem Betriebssystem in Images und virtualisiert Hardware. Dadurch kann man sehr schnell Programme mit dem kompletten Betriebssystem auf vielen Rechnern verteilen.

Apps und Websites lösen vollständig traditionelle monolithische Programme ab. Sie laufen nicht mehr vollständig auf einem einzigen Computer, sondern haben Benutzeroberflächen auf mobilen Geräten und die Daten in der Cloud.
:::
::: {.column width="50%"}
![](images/02a_Softwarearchitektur/archi_10.svg){fig-align="center"}
:::
::::



## Klassifikation der Programmiersprachen nach historischer Anwendung

![](images/02a_Softwarearchitektur/archi_11.svg)

Spezifische Programmiersprachen haben sich entsprechend den Architekturen entwickelt. Deshalb änderten sich auch über die Zeit die beliebten Sprachen.



# Fragen {background="#000" background-video="images/mj_questions.mp4" background-video-loop="true" background-video-muted="true"} 
