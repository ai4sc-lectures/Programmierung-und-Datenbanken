---
title: "Programmieren und Datenbanken - Rekursion"
author: "Joern Ploennigs"
format: revealjs
---

# Rekursion in Funktionen

> DALL·E 2: Library of Babel

---

# Rekursion - Allgemein

> Wikipedia:
> 
> „Als Rekursion (lateinisch *recurrere* – ‚zurücklaufen‘) wird ein prinzipiell unendlicher Vorgang, der sich selbst als Teil enthält oder mithilfe von sich selbst definierbar ist, bezeichnet.“

---

<div class="flex">
<div class="column">

**Praktisch gesprochen:**

Rekursion geschieht immer dann, wenn eine Funktion *sich selbst aufruft*.

</div>
<div class="column">

**Typische Anwendungen:**

- Divide-and-Conquer-Algorithmen  
- Kombinatorische Probleme

</div>
</div>

---

# Rekursion in Python

```python
def rekursive_funktion():
    Statement1
    rekursive_funktion()
```

---

# Beispiel: Fakultät

```python
def factorial_recursiv(x):
    if x > 1:
        return x * factorial_recursiv(x - 1)
    else:
        return 1
```

---

# Informatik-Exkurs: Endlosrekursion & Stack

<div class="flex">
<div class="column">

**Problem:**  
Wie bei `while`-Schleifen kann eine Funktion sich endlos rekursiv aufrufen.

**Lösung:**  
Es muss mindestens ein nicht-rekursiver Pfad existieren.

</div>
<div class="column">

**Fehler:**  
Bei unendlicher Rekursion → **StackOverflow**

**Grund:**  
Python speichert Aufrufe im **Stack**, um bei Rückkehr die Reihenfolge zu beachten.

</div>
</div>

---

# Stack-Prinzip

```text
main()
factorial(1)
factorial(2)
factorial(3)
factorial(4)
factorial(5)
```

**Stack-Größe wächst rekursiv!**

---

# Der Stack

- LIFO: *Last In First Out*
- Wie ein Bücherstapel
- Neue Funktionen kommen oben drauf
- Beim Rücksprung wird „oben“ entfernt

---

# StackOverflow-Fehler

```text
main()
factorial(1)
factorial(2)
factorial(3)
factorial(4)
factorial(5)
factorial(…)
```

- Der Stack wird zu groß
- Speichergrenze überschritten
- **Fataler Fehler** → Programmabsturz

---

# Heap vs Stack

<div class="flex">
<div class="column">

**Stack:**
- Für Funktionsaufrufe
- LIFO-Prinzip
- Begrenzter Speicher

</div>
<div class="column">

**Heap:**
- Für Variablen
- FIFO-ähnlich
- Dynamisch groß (RAM)

</div>
</div>

---

# Fragen?

> DALL·E 2: A psychedelic DJ with a question mark for a head
