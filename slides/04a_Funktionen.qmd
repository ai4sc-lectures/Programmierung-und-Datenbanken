---
title: Programmierung<br>& Datenbanken
subtitle: "Funktionen"
author: "Joern Ploennigs"
format:
  revealjs:
    theme: [default, clean.scss, custom.scss]
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/ai4sc_logo_v2.svg
    footer: |
      <span style="letter-spacing: .04rem;">programmierung</span><br><span style="letter-spacing: .0rem;">und datenbanken</span>
    transition: slide
    transition-speed: fast
    menu:
      side: left
    slide-number: true
    date-format: long
    auto-play-media: true
    template-partials:
      - title-slide.html
    title-slide-attributes:
      data-background-color: black
      data-background-video: images/04a_Funktionen/mj_title.mp4
      data-background-video-loop: true
      data-background-video-muted: true
---

 
# Überblick {background="#333"}
<div class="midjourneyXX_frame">
![Midjourney: Application of ML in Construction](images/ueberblick/mj_application_of_machine_learning_in_construction.png){class="midjourneyXX"}
</div>



## Slide 1


Einführung in Programmierung und Datenbanken

joern ploennigs

programmieren und datenbanken - funktionen

1

![](images/04a_Funktionen/image_1.png)

## Slide 2


2

programmieren und datenbanken - funktionen

Programmierung und Datenbanken

Motivation

Computer und Architekturen

Programmierung und Datentypen

Fehler und Debugging

Objektorientierung u. Softwareentwurf

Verzweigungen und Schleifen

Funktionen und  Rekursion

grundlagen

modellierung

![](images/04a_Funktionen/image_2.wmf)

## Slide 3


3

Funktionen

Midjourney: Vaulted Ceiling of Fractal Function

programmieren und datenbanken - funktionen

## Slide 4


4

programmieren und datenbanken - funktionen

Funktionen - Mathematisch

Funktionen setzen in Programmiersprachen das mathematische Konzept der Funktion um. Sie stellen eine Abbildung von einer Eingabemenge auf eine Ausgabemenge dar.

Abbildung: Eine Funktion f ordnet jedem Element x eine Definitionsmenge D, ein Element y und eine Zielmenge Z zu.

f : D ➜ Z, x ↦ y

## Slide 5


5

programmieren und datenbanken - funktionen

Funktionen - Programmierung

Wiederverwendbarer Programmcode der eine bestimmte Aufgabe ausführt

Funktionen (auf unserem derzeitigen Wissensstand):
Nehmen ein Tupel an Eingabewerten (Argumente)
Führen eine festgelegte Folge von Ausdrücken und Zuweisungen aus
Geben ein Tupel an Ausgabewerten zurück (Rückgabewerte)

Funktionen werden nur ausgeführt wenn sie in einem Ausdruck aufgerufen werden.

## Slide 6


6

programmieren und datenbanken - funktionen

Funktionen In Python

Funktionsdefinitionen beginnen mit def
Es folgt ein Name (ähnlich wie eine Variable), ein Tupel mit Variablen und ein „:“
Diese Variablen (“Argumente“) sind für den ganzen Rest der Funktion gültig
Argumente werden beim Aufruf der Funktion mit den Eingabedaten belegt

		def funktionsname(arg1, arg2):
			Statement1
			Statement2

Codeblock der Funktionsdefinition

## Slide 7


7

programmieren und datenbanken - funktionen

Funktionen Ausgabe

In Funktionen kann die Anweisung return genutzt werden.
Diese beendet die Ausführung der Funktion und gibt Ausgabewerte zurück.

		def funktionsname(arg1):
			Statement1
			return Ausgabewert

„Zurückgeben“ heißt hier: Setzt den Wert von Statement2 in den ursprünglichen Aufruf ein, so als wäre der Funktionsaufruf eine Variable (Der Wert kann dann weiterverwendet werden).
Ist kein return definiert, gibt die Funktion none zurück

## Slide 8


8

programmieren und datenbanken - funktionen

Funktionen – Beispiel: Verdopplung eines Wertes

Definieren der Funktion:

def mal2(arg1):
	return arg1 * 2

Die Funktion aufzurufen funktioniert folgendermaßen:

x = mal2(2)     # x ist nun 4

x = mal2(x)     # x ist nun 8

## Slide 9


9

programmieren und datenbanken - funktionen

Funktionen – Beispiel: Verdopplung eines Wertes

Definieren der Funktion:

def mal2(arg1):
	return arg1 << 1   # das geht auch

Die Funktion aufzurufen funktioniert folgendermaßen:

x = mal2(2)     # x ist nun 4

x = mal2(x)     # x ist nun 8

## Slide 10


10

programmieren und datenbanken - funktionen

Funktionen – Beispiel: Euklidische Distanz

Definieren der Funktion (mit Nutzung der Quadratwurzel durch sqrt Funktion)

	def distance (a1, a2, b1, b2):
		return sqrt((a1 – b1)**2 + (a2 – b2)**2)

Punkte definieren und Funktion aufrufen:

a1, a2 = 2, 3 
b1, b2 = 6, 6
x = distance(a1, a2, b1, b2)      # x ist nun 5

## Slide 11


11

programmieren und datenbanken - funktionen

Funktionen - Default Values

Beim Definieren einer Funktion können den Argumenten Standardwerte gegeben werden.
Dadurch werden diese beim Aufruf der Funktion optional. Werden sie genutzt wird der Standardwert überschrieben.
		
	def funktionsname(arg1, arg2 = “default“):
		return Statement1

## Slide 12


12

programmieren und datenbanken - funktionen

Funktionen – Beispiel: Maßeinheitt zu Zahl hinzufügen

Definieren der Funktion (mit der str Funktion, die eine Zahl in einen String überführt)

	def measurement (number, unit = “meters“):
		return str(number) + ‘ ‘ + unit

Funktion aufrufen:

x = measurement(12)                # x ist nun “12 meters“

x = measurement(5.5, “kg“)    # x ist nun “5.5 kg“

## Slide 13


Pass-by-value
Beim Aufrufen der Funktion werden nur die Werte der Variablen kopiert.
Die eingegebenen Variablen sind in der Funktion nicht zugreifbar.

Ist „sicherer“, da Variablen nicht unerwartet neu belegt werden.

13

Funktionen - Übergeben von Argumentwerten

Pass-by-reference
Geben wir einer Funktion Variablen als Argumente, sind diese in der Funktion voll zugreifbar (veränderbar).


Benötigt weniger Zeit und Speicher.

programmieren und datenbanken - funktionen

## Slide 14


14

programmieren und datenbanken - funktionen

Funktionen - Übergeben von Argumentwerten in Python

Nutzt „Mischvariante“, meistens bezeichnet als Pass-by-assignment

Variablen mit mutable Datentyp: Pass-by-reference
Variablen mit immutable Datentyp: Pass-by-value

Wird eine Variable mit mutablen Datentyp jedoch in der Funktion ganz neu belegt, wird dies außerhalb der Funktion nicht übernommen.

## Slide 15


15

programmieren und datenbanken - funktionen

Funktionen – Built-in Python

Python hat eine Liste an eingebauten Funktionen

## Slide 16


16

programmieren und datenbanken - funktionen

Funktionen - Wozu werden sie genutzt?

Übersichtlichkeit, Modularität, Wiederverwendbarkeit

	„Write once, use anywhere“

Moderner Programmierstil: Programme so weit wie möglich in grundlegende Funktionen aufteilen

## Slide 17


17

programmieren und datenbanken - funktionen

Literaturhinweise

Umfassende Erklärung: https://docs.python.org/3/reference/datamodel.html
Python Standardfunktionen: https://docs.python.org/3/library/functions.html

## Slide 18


18

Fragen?

DALL-E 2: A psychedelic DJ with a question mark for a head

programmieren und datenbanken - funktionen




# Fragen {background="#000" background-video="images/mj_questions.mp4" background-video-loop="true" background-video-muted="true"} 
